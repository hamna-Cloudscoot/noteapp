pipeline {
    agent any

    environment {
        GITHUB_TOKEN = credentials('Github_credentials_ID')
    }

    stages {
        stage('Clone Private Repo') {
    steps {
        script {
            // Define the repository URL and directory path
            def repoUrl = "https://hamna_cloudscoot:${GITHUB_TOKEN}@github.com/hamna-Cloudscoot/noteapp.git"
            def repoDir = "noteapp"

            // Check if the repository directory exists
            if (!fileExists(repoDir)) {
                // If it doesn't exist, clone the repository
                sh "git clone $repoUrl $repoDir"
            } else {
                // If it exists, update the existing clone
                dir(repoDir) {
                    sh "git pull"
                }
            }
        }
    }
}
        stage("build") {
            steps{
                echo "building the image"
                sh "cd noteapp/"
                sh "docker build -t noteappnew -f /var/lib/jenkins/workspace/Noteapp-CICD/Dockerfile /var/lib/jenkins/workspace/Noteapp-CICD"
            }
        }
        stage("pushing into docker hub"){
            steps{
                echo "pushing the image into docker hub"
                withCredentials([usernamePassword(credentialsId:"DockerHub", passwordVariable:"DockerHubpass",usernameVariable:"DockerHubUser")]){
                sh "docker tag noteappnew $DockerHubUser/noteappnew:latest"
                sh "docker login -u $DockerHubUser -p $DockerHubpass"
                sh "docker push $DockerHubUser/noteappnew:latest"
                }
            }
        }
        stage("deploy") {
            steps{
                echo "deploying the image"
                sh "docker run -d --name noteappcontainernew -p 8000:8000 noteappnew"
            }
        }
    }
}
